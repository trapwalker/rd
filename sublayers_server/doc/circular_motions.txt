# 1.1. Контакт кругового движения и статичного объекта #

abs(CB0*e^(i*w*(t-t0)) - A) = r
  A   - координаты статичного объекта;
  B0  - начальная точка кругового маршрута;
  С   - центр поворота;
  CB0 - радиус-вектор из центра поворота в начальную точку кругового маршрута;
  w   - угловая скорость кругового поворота;
  t0  - начальное время кругового движения;
  t   - искомый параметр: решений ожидается множество, но интересуют только два минимальных, но > t0

Подстановки для краткости записи:
  CB0        --> C
  w * (t-t0) --> t

Формула Эйлера: e^(i*x) = cos(x) + i*sin(x)

abs(C * e^(i*t) - A) = r
abs(C * (cos(t) + i*sin(t)) - A) = r
abs(C * cos(t) + C * i*sin(t) - A) = r

C = Cr+i*Ci
A = Ar+i*Ai

abs((Cr+i*Ci) * cos(t) + (Cr+i*Ci) * i*sin(t) - (Ar+i*Ai)) = r
abs(Cr * cos(t) + i*Ci * cos(t) + i*Cr * sin(t) - Ci * sin(t) - Ar - i*Ai) = r
abs((Cr*cos(t) - Ci*sin(t) - Ar) + i*(Ci*cos(t) + Cr*sin(t) - Ai)) = r

x ==> Cr*cos(t) - Ci*sin(t) - Ar
y ==> Ci*cos(t) + Cr*sin(t) - Ai

abs(x + i*y) = r
x^2 + y^2 = r^2

(Cr*cos(t) - Ci*sin(t) - Ar)^2 + (Ci*cos(t) + Cr*sin(t) - Ai)^2 = r^2

  Cr^2*cos(t)^2 - 2*Cr*Ci*sin(t)*cos(t) - 2*Ar*Cr*cos(t) + Ci^2*sin(t)^2 + 2*Ar*Ci*sin(t) + Ar^2 +
+ Ci^2*cos(t)^2 + 2*Cr*Ci*sin(t)*cos(t) - 2*Ai*Ci*cos(t) + Cr^2*sin(t)^2 - 2*Ai*Cr*sin(t) + Ai^2 = r^2

(Cr^2+Ci^2)*cos(t)^2 + (Cr^2+Ci^2)*sin(t)^2 - (Ar*Cr+Ai*Ci)*2*cos(t) + (Ar*Ci-Ai*Cr)*2*sin(t) + Ar^2 + Ai^2 - r^2 = 0

(Cr^2+Ci^2)*(sin(t)^2*cos(t)^2) - (Ar*Cr+Ai*Ci)*2*cos(t) + (Ar*Ci-Ai*Cr)*2*sin(t) + Ar^2 + Ai^2 - r^2 = 0

(Ar*Ci-Ai*Cr)*2*sin(t) - (Ar*Cr+Ai*Ci)*2*cos(t) + Cr^2 + Ci^2 + Ar^2 + Ai^2 - r^2 = 0

Подстановки:
  a = (Ar*Ci-Ai*Cr)*2
  b = (Ar*Cr+Ai*Ci)*2
  c = Cr^2 + Ci^2 + Ar^2 + Ai^2 - r^2

a*sin(t) - b*cos(t) + c = 0

a*sin(t) - b*sqrt(1-sin(t)^2) + c = 0

(a^2 + b^2)*sin(t)^2 + 2*a*c*sin(t) + c^2-b^2 = 0

D/4 = a^2*c^2 - (a^2+b^2)*(c^2-b^2)

if D >= 0:
    t[1,2] = arcsin((a*c+-sqrt(D/4))/(a^2+b^2))  # todo: +i*c



# 1.2. Контакт кругового движения и статичного объекта #
abs(A - B(t)) = r

// Угол, на который поворачивается вектор B -> t = w*(t-t0) 
abs(A - Rotate(B, w*(t-t0))) = r  

A = {a.x; a.y}
Rotate(B, t) = { b.x * cos(t) - b.y * sin(t) ; b.x * sin(t) + b.y * cos(t) } 

abs({a.x; a.y} - { b.x * cos(t) - b.y * sin(t) ; b.x * sin(t) + b.y * cos(t) }) = r

abs({a.x - b.x * cos(t) + b.y * sin(t) ; a.y - b.x * sin(t) - b.y * cos(t)}) = r

(a.x - b.x * cos(t) + b.y * sin(t))^2 + (a.y - b.x * sin(t) - b.y * cos(t))^2 = r^2

// Раскрываем квадраты
(a.x - b.x * cos(t) + b.y * sin(t))^2 = a.x^2 + b.x^2 * cos(t)^2 + b.y^2 * sin(t)^2 +
										- 2 * (a.x * b.x * cos(t)) + 2 * (a.x * b.y * sin(t)) - 2 * (b.x * b.y * cos(t) * sin(t)) 
										
(a.y - b.x * sin(t) - b.y * cos(t))^2 = a.y^2 + b.x^2 * sin(t)^2 + b.y^2 * cos(t)^2 +
										- 2 * (a.y * b.x * sin(t)) - 2 * (a.y * b.y * cos(t)) + 2 * (b.x * b.y * cos(t) * sin(t)) 
								
В итоге:
a.x^2 + b.x^2 * cos(t)^2 + b.y^2 * sin(t)^2 +
a.y^2 + b.x^2 * sin(t)^2 + b.y^2 * cos(t)^2 + 
- 2*(a.x * b.x * cos(t)) + 2*(a.x * b.y * sin(t)) - 2(b.x * b.y * cos(t) * sin(t)) + 
- 2*(a.y * b.x * sin(t)) - 2*(a.y * b.y * cos(t)) + 2(b.x * b.y * cos(t) * sin(t)) = r^2

// - 2(b.x * b.y * cos(t) * sin(t)) + 2(b.x * b.y * cos(t) * sin(t)) = 0   => 
a.x^2 + b.x^2 * cos(t)^2 + b.y^2 * sin(t)^2 +
a.y^2 + b.x^2 * sin(t)^2 + b.y^2 * cos(t)^2 +
-2 * (a.x * b.x * cos(t)) + 2 * (a.x * b.y * sin(t)) +
-2 * (a.y * b.x * sin(t)) - 2 * (a.y * b.y * cos(t)) = r^2

// Вынесение за скобки в последних двух строках
a.x^2 + b.x^2 * cos(t)^2 + b.y^2 * sin(t)^2 +
a.y^2 + b.x^2 * sin(t)^2 + b.y^2 * cos(t)^2 +
-2 * cos(t) * (a.x * b.x + a.y * b.y)
+2 * sin(t) * (a.x * b.y - a.y * b.x) = r^2

// Вынесение за скобки в первых двух строках
a.x^2 + a.y^2 + b.x^2 * (cos(t)^2 + sin(t)^2) + b.y^2 * (sin(t)^2 + cos(t)^2)
-2 * cos(t) * (a.x * b.x + a.y * b.y)
+2 * sin(t) * (a.x * b.y - a.y * b.x) = r^2

// cos(t)^2 + sin(t)^2 = 1
a.x^2 + a.y^2 + b.x^2 + b.y^2 
-2 * cos(t) * (a.x * b.x + a.y * b.y)
+2 * sin(t) * (a.x * b.y - a.y * b.x) = r^2 	

// Сделали подстановку 
//  P1 = a.x^2 + a.y^2 + b.x^2 + b.y^2 - r^2
//  P2 = 2 * (a.x * b.x + a.y * b.y)
//  P3 = 2 * (a.x * b.y - a.y * b.x)																					

P1 - P2 * cos(t) + P3 * sin(t) = 0

// Сделали подстановку   
// cos(t)^2 + sin(t)^2 = 1
// cos(t) = x
P1 - P2 * x + P3 * sqrt(1 - x^2) = 0
P3 * sqrt(1 - x^2) = P2 * x - P1
 
// Возводим все в квадрат
P3^2 * (1 - x^2) = P2^2 * x^2 - 2 * P1 * P2 * x - P1^2
P3^2 - P3^2 * x^2 = P2^2 * x^2 - 2 * P1 * P2 * x - P1^2
(P2^2 + P3^2) * x^2 - 2 * P1 * P2 * x - P1^2 - P3^2 = 0

// Сделали подстановку 
//  P4 = P2^2 + P3^2 
//  P5 = - 2 * P1 * P2
//  P6 = - P1^2 - P3^2

P4 * x^2 + P5 * x + P6 = 0	
D = P5^2 - 4 * P4 * P6 

x[1,2] 	= (-P5 +- sqrt(D)) / 2 * P4	

	
# 2.1. Контакт кругового движения и прямолинейно движущегося объекта #
abs(A(t) - B(t)) = r
A(t) = A0 + V * (t - t0a)
B(t) = CB0 * e^(i*w*(t-t0b))


# 2.2. Контакт кругового движения и прямолинейно движущегося объекта #
abs(A(t) - B(t)) = r
abs(A(t-t0a) - Rotate(B, w*(t-t0b))) = r  	| ta = t - t0a  	// Прямолинейное движение
										    | tb = w*(t - t0b)  // Угол, на который поворачивается вектор B
										

A(t) = A + V(ta) = {a.x; a.y} + {v.x; v.y} * ta = {a.x + v.x * ta; a.y + v.y * ta}
Rotate(B, tb) = { b.x * cos(tb) - b.y * sin(tb) ; b.x * sin(tb) + b.y * cos(tb) }

(a1 + v1 * (x-t1) - b1 * cos(wx-wt2) + b2 * sin(wx-wt2)) ^ 2 + (a2 + v2 * (x-t1) - b1 * sin(wx-wt2) - b2 * cos(wx-wt2)) ^ 2 + r^2=0

abs({a.x + v.x * ta; a.y + v.y * ta} - { b.x * cos(tb) - b.y * sin(tb) ; b.x * sin(tb) + b.y * cos(tb) } ) = r

abs({a.x + v.x * ta - b.x * cos(tb) + b.y * sin(tb)  ;  a.y + v.y * ta - b.x * sin(tb) - b.y * cos(tb) } ) = r

abs({E.x; E.y}) = E.x^2 + E.y^2 = r^2
// Возводим в квадраты каждую из координаты
X: (a.x + v.x * ta - b.x * cos(tb) + b.y * sin(tb)) ^ 2 = 
		a.x^2 + v.x^2 * ta^2 + b.x^2 * cos(tb)^2 + b.y^2 * sin(tb)^2
		2 * a.x * v.x *ta 
		- 2 * a.x * b.x * cos(tb)
		2 * a.x * b.y * sin(tb)
		- 2 * v.x*ta*b.x*cos(tb)
		2 * v.x * ta * b.y * sin(tb)	  		 
		- 2 * b.x * b.y * cos(tb) * sin(tb)
		 
		a.x^2 + a.x * v.x *ta - a.x *b.x*cos(tb) + a.x*b.y*sin(tb) +
		a.x*v.x*ta + v.x^2 * ta^2 - v.x*ta*b.x*cos(tb) + v.x*ta * b.y * sin(tb) +
		-a.x*b.x*cos(tb) -v.x*ta*b.x*cos(tb) + b.x^2 * cos(tb)^2 - b.x*b.y*cos(tb)*sin(tb) +
		a.x*b.y*sin(tb) + v.x*ta*b.y * sin(tb) - b.x*b.y*cos(tb)*sin(tb) +  b.y^2 * sin(tb)^2
		
Y: (a.y + v.y * ta - b.x * sin(tb) - b.y * cos(tb)) ^ 2 = 
		a.y^2 + v.y^2 * ta^2 + b.x^2 * sin(tb)^2 + b.y^2 * cos(tb)^2
		2 * a.y * v.y * ta
		- 2 * a.y * b.x * sin(tb)
		- 2 * a.y * b.y * cos(tb) 
		- 2 * v.y * ta * b.x * sin(tb)			
		- 2 * v.y * ta * b.y * cos(tb) +
		2 * b.x*b.y*sin(tb)*cos(tb)		

		a.y^2 + a.y * v.y *ta - a.y *b.x*sin(tb) - a.y*b.y*cos(tb) +
		a.y*v.y*ta + v.y^2 * ta^2 - v.y*ta*b.x*sin(tb) - v.y*ta * b.y * cos(tb) +
		-a.y*b.x*sin(tb) -v.y*ta*b.x*sin(tb) + b.x^2 * sin(tb)^2 + b.x*b.y*sin(tb)*cos(tb) +
		-a.y*b.y*cos(tb) - v.y*ta*b.y *cos(tb) + b.x*b.y*cos(tb)*sin(tb) +  b.y^2 * cos(tb)^2
		
		
X упрощённый: 
		a.x^2 + 2*a.x*v.x*ta -2*a.x*b.x*cos(tb) + 2*a.x*b.y*sin(tb) +
		v.x^2 * ta^2 - 2*v.x*ta*b.x*cos(tb) + 2*v.x*ta * b.y * sin(tb) + 
		b.x^2 * cos(tb)^2 -2*b.x*b.y*cos(tb)*sin(tb) +
		b.y^2 * sin(tb)^2


Y упрощённый:
		a.y^2 + 2*a.y*v.y*ta -2*a.y *b.x*sin(tb) -2*a.y*b.y*cos(tb) +
		v.y^2 * ta^2 -2*v.y*ta*b.x*sin(tb) - 2*v.y*ta*b.y *cos(tb)+
		b.x^2 * sin(tb)^2 + 2*b.x*b.y*sin(tb)*cos(tb) + 
		b.y^2 * cos(tb)^2
		
		
X+Y = 	a.x^2 + v.x^2 * ta^2 + b.x^2 * cos(tb)^2 + b.y^2 * sin(tb)^2
		a.y^2 + v.y^2 * ta^2 + b.x^2 * sin(tb)^2 + b.y^2 * cos(tb)^2
		2 * a.x * v.x * ta 
		- 2 * a.x * b.x * cos(tb)
		2 * a.x * b.y * sin(tb)
		- 2 * v.x * ta * b.x * cos(tb)
		2 * v.x * ta * b.y * sin(tb)	  		 
		- 2 * b.x * b.y * cos(tb) * sin(tb)		
		2 * a.y * v.y * ta
		- 2 * a.y * b.x * sin(tb)
		- 2 * a.y * b.y * cos(tb) 
		- 2 * v.y * ta * b.x * sin(tb)			
		- 2 * v.y * ta * b.y * cos(tb) +
		2 * b.x * b.y * sin(tb) * cos(tb)	

//Сокращение первых 2 строк
		a.x^2 + a.y^2 + ta^2(v.x^2 + v.y^2) + b.x^2 + b.y^2  
		2 * a.x * v.x * ta 
		- 2 * a.x * b.x * cos(tb)
		2 * a.x * b.y * sin(tb)
		- 2 * v.x * ta * b.x * cos(tb)
		2 * v.x * ta * b.y * sin(tb)	  		 
		- 2 * b.x * b.y * cos(tb) * sin(tb)		
		2 * a.y * v.y * ta
		- 2 * a.y * b.x * sin(tb)
		- 2 * a.y * b.y * cos(tb) 
		- 2 * v.y * ta * b.x * sin(tb)			
		- 2 * v.y * ta * b.y * cos(tb) +
		2 * b.x * b.y * sin(tb) * cos(tb)	

//Сокращение кратных слагаемых
		a.x^2 + a.y^2 + ta^2(v.x^2 + v.y^2) + b.x^2 + b.y^2  
		ta * (2 * a.x * v.x + 2 * a.y * v.y)
		- cos(tb) * (2 * a.x * b.x + 2 * a.y * b.y)
		sin(tb) * (2 * a.x * b.y - 2 * a.y * b.x)
		- ta * cos(tb) * (2 * v.x * b.x + 2 * v.y * b.y)		 		
		ta * sin(tb) * (2 * v.x *  b.y - 2 * v.y  * b.x)
		
// Делаем подстановки констант
// P1 = a.x^2 + a.y^2 + b.x^2 + b.y^2 - r^2
// P2 = v.x^2 + v.y^2
// P3 = 2 * (a.x * v.x + a.y * v.y)
// P4 = 2 * (a.x * b.x + a.y * b.y)
// P5 = 2 * (a.x * b.y - a.y * b.x)
// P6 = 2 * (v.x * b.x + v.y * b.y)
// P7 = 2 * (v.x *  b.y - v.y  * b.x)	

		P1 + ta^2 * P2	
		ta * P3
		- cos(tb) * P4		
		sin(tb) * P5
		- ta * cos(tb) * P6		 		
		ta * sin(tb) * P7
		
// Вынесли за скобки cos
		P1 + ta^2 * P2 + ta * P3 
		- cos(tb) * (P4	+ ta * P6)							
		sin(tb) * (P5 + ta * P7)

// ta = t-t1
// tb = w*t - w*t2
		P1 + (t-t1)^2 * P2 + (t-t1) * P3 
		- cos(w*t - w*t2) * (P4	+ (t-t1) * P6)
		sin(w*t - w*t2) * (P5 + (t-t1) * P7)
		
// Раскрываем скобки
		P1 + P2 * t^2 - 2* P2 * t * t1 + P2 * t1^2  + P3*t - P3*t1
		- cos(w*t - w*t2) * (P4 + P6 * t - P6 * t1)
		sin(w*t - w*t2) * (P5 + P7 * t - P7 * t1)
		
// Замены
	Q1 = P1 - P3*t1 + P2 * t1^2
	Q2 = 2 * P2 * t1	
	Q3 = P4 - P6 * t1
	Q4 = P5  - P7 * t1
		
		
		Q1 + P2 * t^2 - Q2 * t + P3*t 
		- cos(w*t - w*t2) * (Q3 + P6 * t)
		sin(w*t - w*t2) * (Q4 + P7 * t)
		
	Q5 = P3 - Q2
	
		Q1 + P2 * t^2 - Q5 * t
		- cos(w*t - w*t2) * (Q3 + P6 * t)
		sin(w*t - w*t2) * (Q4 + P7 * t)
		
		
		
		
		
// Делаем подстановки 
// cos(tb)^2 + sin(tb)^2 = 1
// sin(tb) = x
		P1 + ta^2 * P2 + ta * P3 
		- sqrt(1 - x^2) * (P4 + ta * P6)		
		x * (P5 + ta * P7)								
		
		


		
		
		
		
		
		
		
		
		
		
		a.x^2 + a.y^2 + 2*a.x*v.x*ta + 2*a.y*v.y*ta
		-2*a.x*b.x*cos(tb) + 2*a.x*b.y*sin(tb) -2*a.y *b.x*sin(tb) -2*a.y*b.y*cos(tb)
		v.x^2 * ta^2 + v.y^2 * ta^2
		- 2*v.x*ta*b.x*cos(tb) -2*v.y*ta*b.x*sin(tb) 
		+ 2*v.x*ta * b.y * sin(tb) - 2*v.y*ta*b.y *cos(tb)
		b.x^2 * cos(tb)^2 + b.x^2 * sin(tb)^2 					| b.x^2(cos(tb)^2 + sin(tb)^2) = b.x^2
		-2*b.x*b.y*cos(tb)*sin(tb) +2*b.x*b.y*sin(tb)*cos(tb)	| 0
		b.y^2 * sin(tb)^2 + b.y^2 * cos(tb)^2 					| b.y^2(sin(tb)^2 + cos(tb)^2) = b.y^2
		
X+Y = 
		a.x^2 + a.y^2 + 2*a.x*v.x*ta + 2*a.y*v.y*ta
		-2*a.x*b.x*cos(tb) + 2*a.x*b.y*sin(tb) -2*a.y *b.x*sin(tb) -2*a.y*b.y*cos(tb)
		v.x^2 * ta^2 + v.y^2 * ta^2
		- 2*v.x*ta*b.x*cos(tb) -2*v.y*ta*b.x*sin(tb) 
		+ 2*v.x*ta*b.y*sin(tb) -2*v.y*ta*b.y*cos(tb)
		+b.x^2 + b.y^2
		
		



		
		
		
		
		
		
		

# 3.1. Контакт кругового движения и объекта движущегося по кругу#
abs(A(t) - B(t)) = r
abs(Rotate(A, w1*(t-t1)) - Rotate(B, w2*(t-t2))) = r  	| ta = w1(t - t1)  	// Прямолинейное движение
														| tb = w2*(t - t2)  // Угол, на который поворачивается вектор B
														
C1 - центр разворота A
С2 - центр разворота B


											
Rotate((A-C1), w1*(t-t1)) + C1 
Rotate((B-C2), w2*(t-t2)) + C2 
		
		
		
		
		
		
		
		
		
		
		
		
		






